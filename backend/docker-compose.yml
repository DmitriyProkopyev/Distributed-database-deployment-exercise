services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_KRAFT_CLUSTER_ID=jDI0zk1hRHeyq6dxPh7FzA
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - 9092:9092
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/build:/usr/share/nginx/html
    restart: unless-stopped

  backend:
    build: .
    ports:
      - "8000:80"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB_NAME=testdb
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  mongo_data:
  kafka_data:
